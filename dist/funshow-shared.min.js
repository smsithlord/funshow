class FunShowEventEmitter{constructor(){this.events={}}on(event,listener,scope){if(!this.events[event]){this.events[event]=[]}this.events[event].push({listener:listener,scope:scope,once:false})}once(event,listener,scope){if(!this.events[event]){this.events[event]=[]}this.events[event].push({listener:listener,scope:scope,once:true})}off(event,listener){if(!event){this.events={};return}if(!this.events[event])return;if(!listener){delete this.events[event];return}this.events[event]=this.events[event].filter((l=>l.listener!==listener))}emit(event,data){if(!this.events[event])return;const listeners=this.events[event].slice();listeners.forEach((l=>{l.listener.call(l.scope,data);if(l.once){this.off(event,l.listener)}}))}}class FunShowEnvironment extends FunShowEventEmitter{constructor(enableUI=true){super();this.enableUI=enableUI;this.modules=[];this.modulesElem=null;this.isMobile=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);this.updateWindowSize();this.isLocal=this.detectEnvironment();this.resolutionMode=0;this.currentLoadingWait=0;this.totalLoadingWait=0;this.maxTotalLoadingWaitTolerence=8;this.applyCloudinaryTransforms=true;this.bindEvents();this.schema=this.createSchema()}createSchema(){return{slideshow:{config:{primaryFontFamily:{type:"dropdown",label:"Primary Font",help:"The main font used throughout the slideshow",options:[{value:"Arial",label:"Arial"},{value:"Helvetica",label:"Helvetica"},{value:"Times New Roman",label:"Times New Roman"},{value:"Courier",label:"Courier"},{value:"Verdana",label:"Verdana"},{value:"Genos",label:"Genos"},{value:"Ubuntu",label:"Ubuntu"},{value:"Pixelify Sans",label:"Pixelify Sans"},{value:"Bungee Spice",label:"Bungee Spice"},{value:"Honk",label:"Honk"},{value:"Loved by the King",label:"Loved by the King"},{value:"Bungee Shade",label:"Bungee Shade"},{value:"La Belle Aurore",label:"La Belle Aurore"},{value:"Racing Sans One",label:"Racing Sans One"},{value:"Rock Salt",label:"Rock Salt"},{value:"Bangers",label:"Bangers"},{value:"Orbitron",label:"Orbitron"},{value:"Lexend Deca",label:"Lexend Deca"},{value:"Amatic SC",label:"Amatic SC"},{value:"Alfa Slab One",label:"Alfa Slab One"},{value:"Barlow Condensed",label:"Barlow Condensed"},{value:"Anton",label:"Anton"},{value:"Bebas Neue",label:"Bebas Neue"}],default:"Arial"},secondaryFontFamily:{type:"dropdown",label:"Secondary Font",help:"The secondary font used for accents or specific elements",options:[{value:"Arial",label:"Arial"},{value:"Helvetica",label:"Helvetica"},{value:"Times New Roman",label:"Times New Roman"},{value:"Courier",label:"Courier"},{value:"Verdana",label:"Verdana"},{value:"Genos",label:"Genos"},{value:"Ubuntu",label:"Ubuntu"},{value:"Pixelify Sans",label:"Pixelify Sans"},{value:"Bungee Spice",label:"Bungee Spice"},{value:"Honk",label:"Honk"},{value:"Loved by the King",label:"Loved by the King"},{value:"Bungee Shade",label:"Bungee Shade"},{value:"La Belle Aurore",label:"La Belle Aurore"},{value:"Racing Sans One",label:"Racing Sans One"},{value:"Rock Salt",label:"Rock Salt"},{value:"Bangers",label:"Bangers"},{value:"Orbitron",label:"Orbitron"},{value:"Lexend Deca",label:"Lexend Deca"},{value:"Amatic SC",label:"Amatic SC"},{value:"Alfa Slab One",label:"Alfa Slab One"},{value:"Barlow Condensed",label:"Barlow Condensed"},{value:"Anton",label:"Anton"},{value:"Bebas Neue",label:"Bebas Neue"}],default:"Verdana"},primaryColor:{type:"color",label:"Primary Color",help:"The main color used in the slideshow",default:"#f0f0f0"},primaryBgColor:{type:"color",label:"Primary Background Color",help:"The main background color",default:"#333333"},secondaryColor:{type:"color",label:"Secondary Color",help:"The secondary color for accents",default:"#ffffff"},secondaryBgColor:{type:"color",label:"Secondary Background Color",help:"The secondary background color",default:"#000000"},stageTransparent:{type:"checkbox",label:"Transparent Stage",help:"Transparent stage instead of using primary background color.",default:false},autoPlay:{type:"checkbox",label:"Auto Play",help:"Start the slideshow automatically",default:true},loop:{type:"checkbox",label:"Loop Slideshow",help:"Loops the slideshow.",default:true},spamProtection:{type:"range",label:"Spam Protection",help:"Delay between slide transitions to prevent spam",min:.1,max:.5,step:.01,default:.25},transitionDuration:{type:"range",label:"Transition Duration",help:"Duration of slide transitions",min:.25,max:6,step:.25,default:1},transitionEntranceTime:{type:"range",label:"Entrance Time",help:"Time for slide to enter",min:.1,max:1,step:.1,default:1},transitionExitTime:{type:"range",label:"Exit Time",help:"Time for slide to exit",min:0,max:1,step:.1,default:.1},playlistStartCollapsed:{type:"checkbox",label:"Start Collapsed",help:"Playlist starts in collapsed state",default:true},playlistStartShuffle:{type:"checkbox",label:"Start Shuffled",help:"Start playlist in shuffled order",default:false},playlistAutoMinimize:{type:"checkbox",label:"Auto Minimize",help:"Automatically minimize playlist",default:true},playlistAutoMinimizeDuration:{type:"range",label:"Auto Minimize Duration",help:"Time before playlist auto-minimizes",min:.5,max:8,step:.5,default:4},playlistAlwaysShowOnSlideChange:{type:"checkbox",label:"Show on Slide Change",help:"Always show playlist when slide changes",default:false},playlistPauseOnInteraction:{type:"checkbox",label:"Pause on Interaction",help:"Pause slideshow when interacting with playlist",default:false},slideStyleIn:{type:"dropdown",label:"Slide In Style",help:"Animation style for slide entrance",options:[{value:"",label:"Random"},{value:"-1",label:"None"},{value:"0",label:"Bubble-In"},{value:"1",label:"Bubble-Out"},{value:"2",label:"Swipe-Up"},{value:"3",label:"Swipe-Down"},{value:"4",label:"Swipe-Left"},{value:"5",label:"Swipe-Right"},{value:"6",label:"Toss-Left"},{value:"7",label:"Toss-Right"}],default:""},slideStyleOut:{type:"dropdown",label:"Slide Out Style",help:"Animation style for slide exit",options:[{value:"",label:"Random"},{value:"-1",label:"None"},{value:"0",label:"Bubble-In"},{value:"1",label:"Bubble-Out"},{value:"2",label:"Swipe-Up"},{value:"3",label:"Swipe-Down"},{value:"4",label:"Swipe-Left"},{value:"5",label:"Swipe-Right"},{value:"6",label:"Toss-Left"},{value:"7",label:"Toss-Right"}],default:""},slideStyleActive:{type:"dropdown",label:"Active Slide Style",help:"Style applied to the active slide",options:[{value:"",label:"Random"},{value:"-1",label:"None"},{value:"0",label:"Drift"},{value:"1",label:"Drift Zoom-In"},{value:"2",label:"Drift Zoom-Out"},{value:"3",label:"Zoom-In Low"},{value:"4",label:"Zoom-In Mid"},{value:"5",label:"Zoom-In Max"},{value:"6",label:"Zoom-Out Low"},{value:"7",label:"Zoom-Out Mid"},{value:"8",label:"Zoom-Out Max"}],default:"1"},slideDisplayDuration:{type:"range",label:"Slide Duration",help:"Duration each slide is displayed",min:1,max:20,step:1,default:4},slideDefaultScale:{type:"range",label:"Slide Default Scale",help:"Slides start at this scale.",min:.5,max:1.5,step:.1,default:1},slideVideoAutoplay:{type:"checkbox",label:"Video Autoplay",help:"Automatically play videos in slides",default:true},slideVideoMuted:{type:"checkbox",label:"Video Muted",help:"Mute videos by default",default:true},slideVideoLoop:{type:"checkbox",label:"Video Loop",help:"Loop videos in slides",default:true},slideMediaObjectFit:{type:"dropdown",label:"Media Object Fit",help:"How media should be fitted within slides",options:[{value:"contain",label:"Contain"},{value:"cover",label:"Cover"},{value:"fill",label:"Fill"},{value:"none",label:"None"},{value:"scale-down",label:"Scale Down"}],default:"contain"},slideVideoControls:{type:"checkbox",label:"Video Controls",help:"Show video controls",default:false},stageBackgroundImage:{type:"text",label:"Stage Background Image",help:"Background image URL to use on the stage",default:""},mediaAsBackground:{type:"checkbox",label:"Images As Backgrounds",help:"Use a darkend version of images as their own background during the slideshow",default:true},contentPath:{type:"text",label:"Content Path",help:"The path to look for any relative media in",default:""},workingDirectory:{type:"text",label:"Working Directory",help:"(BUILDER ONLY) Overrides the contentPath when working in the builder",default:""},cloudinaryTransforms:{type:"checkbox",label:"Cloudinary Transforms",help:"Automatically apply Cloudinary transforms. (If Cloudinary content path is detected.)",default:true}}},slide:{file:{type:"textarea",label:"File",help:"Path or URL to the slide media file",default:""},title:{type:"text",label:"Title",help:"Title of the slide",default:"My Slide"},type:{type:"dropdown",label:"Type",help:"Type of media (e.g., image, video)",options:[{value:"image",label:"Image"},{value:"video",label:"Video"},{value:"html",label:"HTML"},{value:"category",label:"Category"}],default:"html"},description:{type:"textarea",label:"Description",help:"Description or caption for the slide",default:""},config:{styleIn:{type:"dropdown",label:"Style In",help:"Animation style for this slide's entrance",options:[{value:"",label:"Random"},{value:"-1",label:"None"},{value:"0",label:"Bubble-In"},{value:"1",label:"Bubble-Out"},{value:"2",label:"Swipe-Up"},{value:"3",label:"Swipe-Down"},{value:"4",label:"Swipe-Left"},{value:"5",label:"Swipe-Right"},{value:"6",label:"Toss-Left"},{value:"7",label:"Toss-Right"}],default:""},styleOut:{type:"dropdown",label:"Style Out",help:"Animation style for this slide's exit",options:[{value:"",label:"Random"},{value:"-1",label:"None"},{value:"0",label:"Bubble-In"},{value:"1",label:"Bubble-Out"},{value:"2",label:"Swipe-Up"},{value:"3",label:"Swipe-Down"},{value:"4",label:"Swipe-Left"},{value:"5",label:"Swipe-Right"},{value:"6",label:"Toss-Left"},{value:"7",label:"Toss-Right"}],default:""},styleActive:{type:"dropdown",label:"Active Style",help:"Style applied when this slide is active",options:[{value:"",label:"Random"},{value:"-1",label:"None"},{value:"0",label:"Drift"},{value:"1",label:"Drift Zoom-In"},{value:"2",label:"Drift Zoom-Out"},{value:"3",label:"Zoom-In Low"},{value:"4",label:"Zoom-In Mid"},{value:"5",label:"Zoom-In Max"},{value:"6",label:"Zoom-Out Low"},{value:"7",label:"Zoom-Out Mid"},{value:"8",label:"Zoom-Out Max"}],default:"1"},displayDuration:{type:"range",label:"Display Duration",help:"Duration this slide is displayed",min:1,max:20,step:1,default:4},defaultScale:{type:"range",label:"Slide Default Scale",help:"Slides start at this scale.",min:.5,max:1.5,step:.1,default:1},videoAutoplay:{type:"checkbox",label:"Video Autoplay",help:"Automatically play video for this slide",default:true},videoMuted:{type:"checkbox",label:"Video Muted",help:"Mute video for this slide",default:true},videoLoop:{type:"checkbox",label:"Video Loop",help:"Loop video for this slide",default:true},mediaObjectFit:{type:"dropdown",label:"Media Object Fit",help:"How media should be fitted within this slide",options:[{value:"contain",label:"Contain"},{value:"cover",label:"Cover"},{value:"fill",label:"Fill"},{value:"none",label:"None"},{value:"scale-down",label:"Scale Down"}],default:"contain"},videoControls:{type:"checkbox",label:"Video Controls",help:"Show video controls for this slide",default:false}}}}}createMediaItemFromMediaUrl(mediaUrl){let mediaType=this.determineMediaType(mediaUrl);if(mediaType!="image"&&mediaType!="video"){mediaType="image"}const mediaTitle=this.createTitleFromUrl(mediaUrl);const shortName=mediaUrl.split("/").pop();return{name:mediaTitle,type:mediaType,file:mediaUrl}}createTitleFromUrl(url){let cleanUrl=url.replace(/^(https?:\/\/)?(www\.)?/,"");let parts=cleanUrl.split("/");let lastPart=parts[parts.length-1];if(lastPart&&lastPart.includes(".")){lastPart=lastPart.split("?")[0];return decodeURIComponent(lastPart)}let domain=parts[0];let firstPath=parts[1]?"/"+parts[1]:"";domain=domain.split(".").slice(0,-1).join(".");let title=(domain+firstPath).replace(/[-_]/g," ").replace(/\b\w/g,(c=>c.toUpperCase()));return decodeURIComponent(title)}determineMediaType(url){const lowercaseUrl=url.toLowerCase();const imageExtensions=[".jpg",".jpeg",".png",".gif",".bmp",".webp",".svg"];const videoExtensions=[".mp4",".avi",".mov",".wmv",".flv",".webm",".mkv"];for(const ext of imageExtensions){if(lowercaseUrl.endsWith(ext)){return"image"}}for(const ext of videoExtensions){if(lowercaseUrl.endsWith(ext)){return"video"}}if(lowercaseUrl.includes("image")||lowercaseUrl.includes("img")){return"image"}if(lowercaseUrl.includes("video")||lowercaseUrl.includes("vid")){return"video"}return"unknown"}async getSlideshowUrlParams(){async function fetchJson(url){const response=await fetch(url);if(!response.ok){throw new Error("Network response was not ok")}return await response.json()}const urlParams=new URLSearchParams(window.location.search);const paramSchema={s:{param:"s",description:"slideshow JSON URL",value:null,initialize:async function(){const slideshowUrl=decodeURIComponent(urlParams.get(this.param));this.value=await fetchJson(slideshowUrl)}},sl:{param:"sl",description:"JSON object of an array of strings that are slideshow JSON URLs",value:null,initialize:async function(){const slideshowUrls=JSON.parse(decodeURIComponent(urlParams.get(this.param)));this.value=await Promise.all(slideshowUrls.map(fetchJson))}},j:{param:"j",description:"JSON structure of a showcase itself",value:null,initialize:function(){this.value=JSON.parse(decodeURIComponent(urlParams.get(this.param)))}},jl:{param:"jl",description:"JSON object of an array of showcases",value:null,initialize:function(){this.value=JSON.parse(decodeURIComponent(urlParams.get(this.param)))}},m:{param:"m",description:"url to an individual media",value:null,initialize:function(){this.value=decodeURIComponent(urlParams.get(this.param))}},ml:{param:"ml",description:"JSON object of an array of strings that are urls to an individual medias",value:null,initialize:function(){this.value=JSON.parse(urlParams.get(this.param))}}};const initializationPromises=[];for(const schemaId in paramSchema){if(urlParams.has(schemaId)){try{const initPromise=paramSchema[schemaId].initialize();if(initPromise instanceof Promise){initializationPromises.push(initPromise)}}catch(e){console.log("Failed to parse "+schemaId)}}}await Promise.all(initializationPromises);return paramSchema}createDefaultSlide(){const slide={config:{}};for(const[key,value]of Object.entries(this.schema.slide)){if(key!=="config"){slide[key]=value.default}else{for(const[configKey,configValue]of Object.entries(value)){slide.config[configKey]=configValue.default}}}return slide}prepareMediaSrc(mediaItem,lastUsedPath,field="file"){function isNonRelativeUrl(str){try{const url=new URL(str);return url.protocol.startsWith("http")||url.protocol.startsWith("https")}catch(error){return false}}if(mediaItem[field].indexOf("blob:")===0){return mediaItem[field]}else{if(isNonRelativeUrl(mediaItem[field])){return mediaItem[field]}let pathToUse=lastUsedPath??"";let fieldValue=mediaItem[field];if(pathToUse.indexOf("https://res.cloudinary.com/")===0){if(mediaItem.type==="video"&&pathToUse.indexOf("/video/")<0&&pathToUse.indexOf("/image/")>=0){pathToUse=pathToUse.replace(/\/image\//g,"/video/")}else if(mediaItem.type==="image"&&pathToUse.indexOf("/image/")<0&&pathToUse.indexOf("/video/")>=0){pathToUse=pathToUse.replace(/\/video\//g,"/image/")}fieldValue=mediaItem[field].replace(/\s/g,"_");if(this.applyCloudinaryTransforms){let bestImageSize=null;if(!this.windowSize){this.updateWindowSize()}if(this.windowSize.width<=1280||this.resolutionMode>0){bestImageSize=1280}let transforms="f_auto,q_auto";if(bestImageSize){transforms+=`,w_${bestImageSize}`}pathToUse=pathToUse.replace(/(\/(?:image|video)\/upload\/)/,`$1${transforms}/`)}}return`${pathToUse}${fieldValue}`}}mergeSlideshow(defaultSlideshow,customSlideshow,mergeSlideConfigs=true){const mergedSlideshow={config:{...defaultSlideshow.config,...customSlideshow.config},slides:customSlideshow.slides.map((customSlide=>{const defaultSlide=this.createDefaultSlide();if(!mergeSlideConfigs){return{...defaultSlide,...customSlide,config:customSlide.config}}else{return{...defaultSlide,...customSlide,config:{...defaultSlide.config,...customSlide.config}}}}))};return mergedSlideshow}newGame(){const splash=new FunShowSplash;splash.on("optionSelected",(option=>{splash.destroy();if(option=="builder"){const builder=new FunShowBuilder}else if(option=="viewer"){this.startBlankViewer()}else if(option=="help"){const help=new FunShowHelp}}))}startBlankViewer(){const wrapper=document.createElement("div");wrapper.innerHTML=`\n            <div class="funshow-blank-viewer-top">\n                <div class="funshow-blank-viewer-header">\n                    <div class="funshow-blank-viewer-main-content">\n                        <svg class="funshow-blank-viewer-app-icon" viewBox="18 21 33 22" xmlns="http://www.w3.org/2000/svg">\n                            <g fill="currentColor">\n                                <path d="M20 25h22v15H20z" stroke="currentColor" stroke-width="1" fill="none"/>\n                                <path d="M24 28l16 8-16 8V28z"/>\n                                <circle cx="48" cy="24" r="3"/>\n                                <circle cx="48" cy="32" r="3"/>\n                                <circle cx="48" cy="40" r="3"/>\n                            </g>\n                        </svg>\n                        <div>\n                            FunShow\n                            <div style="display: flex; flex-direction: row; margin-top: -20px; align-items: center; justify-items: center; justify-content: flex-start;">\n                                <svg viewBox="8 11 48 42" xmlns="http://www.w3.org/2000/svg" class="funshow-blank-viewer-icon" style="margin-bottom: 0;">\n                                    <g fill="none" stroke="currentColor" stroke-width="2">\n                                        <ellipse cx="32" cy="32" rx="16" ry="10"/>\n                                        <path d="M20 32h-8M52 32h-8" stroke="currentColor" stroke-width="2"/>\n                                        <circle cx="32" cy="32" r="5" stroke-width="3"/>\n                                    </g>\n                                </svg>\n                                <div style="font-size: 20px; letter-spacing: 0.2em;">Slideshow Viewer</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="funshow-blank-viewer-instructions">\n                    <p>Local files & folders of images/videos supported.</p>\n                    <p>JSON slideshows exported from builder also supported.</p>\n                    <p>FunShow does not upload or host your content.</p>\n                </div>\n                <div class="funshow-blank-viewer-drop-zone" style="width: 400px; height: 300px;"></div>\n                <button class="funshow-blank-viewer-back-button" style="margin: 0 10px; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; font-size: 16px; margin-top: 24px; background-color: #6c757d; color: #ffffff; display: flex; align-items: center; justify-content: center; gap: 8px;">\n                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" style="height: 20px;">\n                        <path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" fill="currentColor"/>\n                    </svg>\n                    <div>Back</div>\n                </button>\n            </div>\n            <div class="funshow-blank-viewer-footer">\n                <div class="funshow-blank-viewer-footer-links">\n                    <a href="https://x.com/anarchyarcade" target="_blank" rel="noopener noreferrer" class="funshow-blank-viewer-footer-link funshow-blank-viewer-x-link">\n                        <span>Created by SM Sith Lord</span>\n                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">\n                            <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>\n                        </svg>\n                    </a>\n                    <a href="https://github.com/smsithlord/funshow" target="_blank" rel="noopener noreferrer" class="funshow-blank-viewer-footer-link funshow-blank-viewer-github-link">\n                        <span>View on GitHub</span>\n                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">\n                            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>\n                        </svg>\n                    </a>\n                </div>\n                <p>\n                    This software is released under the MIT License.<br>\n                    <a href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener noreferrer" style="color: #ffffff;">https://opensource.org/licenses/MIT</a>\n                </p>\n            </div>\n        `;wrapper.className="funshow-blank-viewer-wrapper";const dropZone=wrapper.querySelector(".funshow-blank-viewer-drop-zone");const backButton=wrapper.querySelector(".funshow-blank-viewer-back-button");document.body.appendChild(wrapper);const mediaLibrary=new FunShowMediaLibraryDragAndDropBuilder({container:dropZone,lookForJSON:true,generateSlideshow:false});backButton.addEventListener("click",(()=>{mediaLibrary.destroy();wrapper.remove();this.newGame()}));if(!this.modules.FunShowSplash){backButton.style.display="none"}mediaLibrary.on("jsonDropped",(slideshow=>{wrapper.remove();this.startShow({slideshow:slideshow})}));mediaLibrary.on("ready",(mediaLibraryItems=>{wrapper.remove();this.startShow({mediaLibraryItems:mediaLibraryItems})}))}async fetchJSON(url){try{const response=await fetch(url);const data=await response.json();return data}catch(error){console.error("There was a problem with the fetch operation:",error)}}async fetchJSONAndStartShow(url,opts={}){try{const slideshow=await this.fetchJSON(url);opts.slideshow=slideshow;return this.startShow(opts)}catch(error){console.error("There was a problem with the fetch operation:",error)}}setApplyCloudinaryTransforms(val){this.applyCloudinaryTransforms=val}startShow({slideshow:slideshow=null,mediaLibraryItems:mediaLibraryItems=null,enableUI:enableUI=true,allowWorkingPath:allowWorkingPath=false}={}){const funShow=new FunShow({slideshow:slideshow,mediaLibraryItems:mediaLibraryItems,enableUI:enableUI,allowWorkingPath:allowWorkingPath});funShow.stage.startSlideshow();return funShow}generateDefaultSlideshow(){const slideshow={config:{},slides:[]};for(const[key,value]of Object.entries(this.schema.slideshow.config)){slideshow.config[key]=value.default}return slideshow}bindEvents(){this.DOMContentLoadedHandler=this.onDOMContentLoaded.bind(this);document.addEventListener("DOMContentLoaded",this.DOMContentLoadedHandler)}onDOMContentLoaded(){this.modules=this.detectModules();if(this.enableUI){this.injectCSS();this.injectHTML();this.initUI()}}detectEnvironment(){const isLocal=window.location.hostname==="";if(isLocal){document.body.classList.remove("funshow-env-server");document.body.classList.add("funshow-env-local")}return isLocal}detectModules(){const detectedModules={FunShowSplash:typeof FunShowSplash==="function",FunShowBuilder:typeof FunShowBuilder==="function",FunShow:typeof FunShow==="function"};return detectedModules}injectCSS(){const css=`\n            .funshow-environment-watermark {\n                position: absolute;\n                bottom: 20px;\n                right: 20px;\n                background: rgba(0, 0, 0, 0);\n                color: #999;\n                border-radius: 5px;\n                font-family: Arial, sans-serif;\n                font-size: 10px;\n                z-index: 9999;\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                opacity: 0.2;\n                transition: opacity 1s ease;\n            }\n            .funshow-environment-watermark-info {\n                padding: 5px 10px;\n                display: none;\n                padding-right: 0;\n                flex-direction: column;\n                align-items: flex-end;\n            }\n            .funshow-environment-watermark:hover .funshow-environment-watermark-info {\n                display: flex;\n            }\n            .funshow-environment-watermark:hover {\n                background: rgba(0, 0, 0, 0.8);\n                opacity: 1.0;\n            }\n            .funshow-environment-modules {\n                font-size: 8px;\n                margin-top: 2px;\n            }\n\n            .funshow-blank-viewer-wrapper {\n                font-family: Arial, sans-serif;\n                background-color: #121212;\n                color: #ffffff;\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: space-between;\n                min-height: 100vh;\n                margin: 0;\n                padding: 2rem 0;\n                box-sizing: border-box;\n                width: 100%;\n                height: 100%;\n            }\n            .funshow-blank-viewer-header {\n                display: flex;\n                align-items: center;\n                font-size: 4rem;\n                margin-bottom: 2rem;\n                animation: funshow-blank-viewer-fadeIn 1s ease-out;\n            }\n\n            .funshow-blank-viewer-top {\n                display: flex;\n                flex-direction: column;\n                align-items: center;\n                justify-content: center;\n                flex-grow: 1;\n            }\n\n            .funshow-blank-viewer-main-content {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                justify-content: center;\n                flex-grow: 1;\n            }\n\n            .funshow-blank-viewer-instructions {\n                text-align: center;\n                margin-bottom: 2rem;\n                max-width: 600px;\n                animation: funshow-blank-viewer-fadeIn 1s ease-out 0.5s both;\n            }\n\n            .funshow-blank-viewer-app-icon {\n                width: 100px;\n                height: 100px;\n                margin-right: 1rem;\n            }\n\n            .funshow-blank-viewer-icon {\n                width: 48px;\n                height: 48px;\n                margin-bottom: 1rem;\n            }\n\n            @keyframes funshow-blank-viewer-fadeIn {\n                from { opacity: 0; transform: translateY(20px); }\n                to { opacity: 1; transform: translateY(0); }\n            }\n\n            .funshow-blank-viewer-footer {\n                font-size: 0.8rem;\n                text-align: center;\n                opacity: 0.7;\n                margin-top: 2rem;\n            }\n\n            .funshow-blank-viewer-footer-links {\n                display: flex;\n                justify-content: center;\n                gap: 20px;\n                margin-bottom: 15px;\n            }\n\n            .funshow-blank-viewer-footer-link {\n                display: inline-flex;\n                align-items: center;\n                color: #ffffff;\n                text-decoration: none;\n                transition: color 0.3s ease;\n            }\n\n            .funshow-blank-viewer-footer-link:hover {\n                color: #4a90e2;\n            }\n\n            .funshow-blank-viewer-footer-link svg {\n                width: 16px;\n                height: 16px;\n                margin-left: 5px;\n            }\n\n            .funshow-blank-viewer-footer-link span {\n                font-weight: bold;\n            }\n        `;const style=document.createElement("style");style.textContent=css;document.head.appendChild(style)}injectHTML(){const html=`\n            <div class="funshow-environment-watermark">\n                <div class="funshow-environment-watermark-info">\n                    <div class="funshow-version"></div>\n                    <div class="funshow-environment"></div>\n                    <div class="funshow-environment-modules"></div>\n                </div>\n                <div style="width: 32px; height: 32px; display: flex; justify-items: center; padding: 8px;">\n                    <svg viewBox="18 21 33 22" xmlns="http://www.w3.org/2000/svg">\n                        <g fill="currentColor">\n                            <path d="M20 25h22v15H20z" stroke="currentColor" stroke-width="1" fill="none"/>\n                            <path d="M24 28l16 8-16 8V28z"/>\n                            <circle cx="48" cy="24" r="3"/>\n                            <circle cx="48" cy="32" r="3"/>\n                            <circle cx="48" cy="40" r="3"/>\n                        </g>\n                    </svg>\n                </div>\n            </div>\n        `;const tempDiv=document.createElement("div");tempDiv.innerHTML=html;document.body.appendChild(tempDiv.firstElementChild)}reportLoadingWaitFinished(waitTime){this.currentLoadingWait+=waitTime;if(this.currentLoadingWait>this.maxTotalLoadingWaitTolerence&&this.resolutionMode<2){this.totalLoadingWait+=this.currentLoadingWait;this.currentLoadingWait=0;this.resolutionMode++;console.log("kick into lower res mode",this.resolutionMode)}}updateWindowSize(){this.windowSize={width:window.innerWidth,height:window.innerHeight}}initUI(){const watermark=document.querySelector(".funshow-environment-watermark");const funShowVersion=watermark.querySelector(".funshow-version");const environment=watermark.querySelector(".funshow-environment");this.modulesElem=watermark.querySelector(".funshow-environment-modules");funShowVersion.textContent="FunShow v0.0.1 ALPHA";const isMobileString=this.isMobile?"MOBILE ":"";environment.style.cssText="font-weight: bold; color: #fff;";if(this.isLocal){environment.textContent=`${isMobileString}LOCAL MODE`}else{environment.textContent=`${isMobileString}SERVER MODE: ${window.location.hostname}`}const modulesList=[];const moduleKeys=Object.keys(this.modules);moduleKeys.forEach((key=>{if(this.modules[key]){if(key==="FunShow"){modulesList.push("FunShowViewer")}else{modulesList.push(key)}}}));this.modulesElem.textContent=modulesList.join(", ")}}window.funShowEnvironment=new FunShowEnvironment;class FunShowMediaLibraryDragAndDropBuilder extends FunShowEventEmitter{constructor({container:container=document.body,autoDestruct:autoDestruct=true,dropHTML:dropHTML="Drag & Drop Files Here",modestStyle:modestStyle=false,lookForJSON:lookForJSON=false,generateSlideshow:generateSlideshow=false}={}){super();this.container=container;this.autoDestruct=autoDestruct;this.lookForJSON=lookForJSON;this.generateSlideshow=generateSlideshow;this.dropHTML=dropHTML;this.modestStyle=modestStyle;this.dragAndDropDiv=null;this.items={};this.fileMetrics={totalFiles:0,image:0,video:0,model:0,folder:0,other:0};this.injectCSS();this.createDragAndDropDiv();this.addDropListener()}static cssInjected=false;injectCSS(){if(FunShowMediaLibraryDragAndDropBuilder.cssInjected)return;const css=`\n            .medialibrary-drag-drop-container {\n                position: relative;\n                width: 100%;\n                height: 100%;\n            }\n            .medialibrary-drag-drop {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                justify-content: center;\n                gap: 20px;\n                align-items: center;\n                text-align: center;\n                font-family: Arial, sans-serif;\n                display: flex;\n                flex-direction: column;\n            }\n            .medialibrary-drag-drop {\n                color: #aaa;\n            }\n            .medialibrary-drag-drop.dragging {\n                color: #333;\n            }\n            .medialibrary-drag-drop:not(.modest) {\n                border: 2px dashed #aaa;\n            }\n            .medialibrary-drag-drop:not(.modest).dragging {\n                border-color: #333;\n            }\n        `;const style=document.createElement("style");style.textContent=css;document.head.appendChild(style);FunShowMediaLibraryDragAndDropBuilder.cssInjected=true}createDragAndDropDiv(){const containerDiv=document.createElement("div");containerDiv.classList.add("medialibrary-drag-drop-container");containerDiv.style.width="100%";containerDiv.style.height="100%";this.dragAndDropDiv=document.createElement("div");this.dragAndDropDiv.classList.add("medialibrary-drag-drop");if(this.modestStyle){this.dragAndDropDiv.classList.add("modest")}this.dragAndDropDiv.innerHTML=this.dropHTML;containerDiv.appendChild(this.dragAndDropDiv);this.container.appendChild(containerDiv)}addDropListener(){this.dragAndDropDiv.addEventListener("dragover",this.handleDragOver.bind(this));this.dragAndDropDiv.addEventListener("dragleave",this.handleDragLeave.bind(this));this.dragAndDropDiv.addEventListener("drop",this.handleDrop.bind(this))}handleDragOver(event){event.preventDefault();this.dragAndDropDiv.classList.add("dragging")}handleDragLeave(){this.dragAndDropDiv.classList.remove("dragging")}handleDrop(event){event.preventDefault();this.dragAndDropDiv.classList.remove("dragging");const items=event.dataTransfer.items;if(this.lookForJSON&&items.length===1&&items[0].kind==="file"){const file=items[0].getAsFile();if(file.name.toLowerCase().endsWith(".json")){const reader=new FileReader;reader.onload=e=>{try{const jsonObject=JSON.parse(e.target.result);console.log("JSON file contents:",jsonObject);this.emit("jsonDropped",jsonObject);if(this.autoDestruct){this.destroy()}else{this.reset()}}catch(error){console.error("Error parsing JSON file:",error)}};reader.readAsText(file);return}}const promises=[];const startTime=performance.now();for(const item of items){if(item.kind==="file"){promises.push(item.getAsFileSystemHandle().then((entry=>{if(entry.kind==="directory"){return this.processDirectory(entry,null)}else{return this.processFile(entry,null)}})))}}Promise.all(promises).then((()=>{const endTime=performance.now();const processDuration=((endTime-startTime)/1e3).toFixed(2)+" seconds";console.log(`Finished processing ${this.fileMetrics.totalFiles} files in ${processDuration}.`);console.log(`Images: ${this.fileMetrics.image}`);console.log(`Videos: ${this.fileMetrics.video}`);console.log(`Folders: ${this.fileMetrics.folder}`);console.log(`Other (skipped): ${this.fileMetrics.other+this.fileMetrics.model}`);this.emit("ready",this.items);if(this.autoDestruct){this.destroy()}else{this.reset()}})).catch((error=>{console.error("Error processing files:",error)}))}reset(){this.items={};this.fileMetrics={totalFiles:0,image:0,video:0,model:0,folder:0,other:0};this.dragAndDropDiv.innerHTML=this.dropHTML;this.emit("reset")}destroy(){const containerDiv=this.dragAndDropDiv?.parentNode;if(containerDiv&&containerDiv.parentNode){containerDiv.parentNode.removeChild(containerDiv)}this.dragAndDropDiv=null;this.items={};this.fileMetrics={totalFiles:0,image:0,video:0,model:0,folder:0,other:0};this.emit("destroy");this.off()}generatePushID(){const PUSH_CHARS="-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz";let lastPushTime=0;let lastRandChars=[];return function(){let now=(new Date).getTime();const duplicateTime=now===lastPushTime;lastPushTime=now;let timeStampChars=new Array(8);for(let i=7;i>=0;i--){timeStampChars[i]=PUSH_CHARS.charAt(now%64);now=Math.floor(now/64)}if(now!==0)throw new Error("We should have converted the entire timestamp.");let id=timeStampChars.join("");if(!duplicateTime){for(let i=0;i<12;i++){lastRandChars[i]=Math.floor(Math.random()*64)}}else{for(let i=11;i>=0&&lastRandChars[i]===63;i--){lastRandChars[i]=0}lastRandChars[11]++}for(let i=0;i<12;i++){id+=PUSH_CHARS.charAt(lastRandChars[i])}if(id.length!==20)throw new Error("Length should be 20.");return id}}determineFileType(fileName){const extension=fileName.split(".").pop().toLowerCase();switch(extension){case"jpg":case"jpeg":case"png":case"gif":case"bmp":case"webp":return"image";case"mp4":case"mkv":case"webm":case"avi":return"video";case"glb":return"model";default:return""}}async processDirectory(directory,parentItemId,parentDirectory){const itemId=this.generatePushID()();this.items[itemId]={id:itemId,name:directory.name,type:"folder",file:null,parent:parentItemId,directory:parentDirectory};this.fileMetrics.folder++;for await(const entry of directory.values()){if(entry.kind==="file"){await this.processFile(entry,itemId,directory)}else if(entry.kind==="directory"){await this.processDirectory(entry,itemId,directory)}}}async processFile(fileHandle,parentItemId,directory){const file=await fileHandle.getFile();const itemId=this.generatePushID()();const fileType=this.determineFileType(file.name);this.items[itemId]={id:itemId,name:file.name,type:fileType,file:file,parent:parentItemId,directory:directory};this.fileMetrics.totalFiles++;if(fileType){this.fileMetrics[fileType]++}else{this.fileMetrics.other++}}}